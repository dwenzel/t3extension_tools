name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, intl, zip, json, iconv
          tools: composer:v2

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Run quality checks
        run: |
          composer validate --strict
          composer lint:php
          composer sca:php
          composer test:unit

      - name: Create release notes
        id: release_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Extract changelog for this version
          if [ -f CHANGELOG.md ]; then
            sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          else
            echo "Release $VERSION" > release_notes.md
            echo "" >> release_notes.md
            echo "See commit history for details." >> release_notes.md
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_notes.outputs.version }}
          release_name: Release ${{ steps.release_notes.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

  publish-packagist:
    name: Update Packagist
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Update Packagist
        run: |
          if [ -n "${{ secrets.PACKAGIST_TOKEN }}" ]; then
            curl -XPOST -H'content-type:application/json' \
              'https://packagist.org/api/update-package?username=${{ secrets.PACKAGIST_USERNAME }}&apiToken=${{ secrets.PACKAGIST_TOKEN }}' \
              -d'{"repository":{"url":"https://github.com/${{ github.repository }}"}}'
          else
            echo "Packagist token not configured, skipping auto-update"
          fi